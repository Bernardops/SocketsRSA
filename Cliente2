package br.unisinos;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.net.Socket;

public class Cliente2 {

    private static final int n = 13 * 29; // 377

    public static void main(String[] args) {
        try {
            Socket socket = new Socket("localhost", 23456);
            BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            BufferedReader teclado = new BufferedReader(new InputStreamReader(System.in));

            String mensagemCriptografada;
            while (true) {
                // Recebe a mensagem criptografada do servidor
                mensagemCriptografada = in.readLine();
                if (mensagemCriptografada == null) break; // Se o servidor fechar a conexão

                System.out.println("Mensagem criptografada recebida: " + mensagemCriptografada);

                // Solicita a chave privada (d) do usuário
                System.out.println("Insira sua chave privada (valor de 'd') para descriptografar:");
                String chavePrivadaStr = teclado.readLine();
                int d = Integer.parseInt(chavePrivadaStr);

                // Descriptografa a mensagem
                String mensagemDescriptografada = descriptografarRSA(mensagemCriptografada, d);
                System.out.println("Mensagem descriptografada: " + mensagemDescriptografada);
            }

            socket.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static String descriptografarRSA(String mensagemCriptografada, int d) {
        StringBuilder resultado = new StringBuilder();
        String[] numerosCriptografados = mensagemCriptografada.split(" ");
        for (String numeroStr : numerosCriptografados) {
            BigInteger criptografado = new BigInteger(numeroStr);
            BigInteger descriptografado = criptografado.pow(d).mod(BigInteger.valueOf(n));
            resultado.append((char) descriptografado.intValue());
        }
        return resultado.toString();
    }
}
